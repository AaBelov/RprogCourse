library(GraphClusterAnalysis)
library(RBGL)
library(igraph)
library(graph)
install.packages("igraph")
library(GraphClusterAnalysis)
library(RBGL)
library(igraph)
library(graph)
source("http://bioconductor.org/biocLite.R")
biocLite("graph")
source("http://bioconductor.org/biocLite.R")
biocLite("RBGL")
library(GraphClusterAnalysis)
library(RBGL)
library(igraph)
library(graph)
data(Betweenness_Vertex_Example)
G = graph.data.frame(Betweenness_Vertex_Example,directed=FALSE)
betweennessBasedClustering(G,mode="vertex",threshold=0.2)
help data
help
data?
w
data help
data(Titanic)
R<-data(Titanic)
R
R[1]
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
read.graph(c:\SNAData\BelovAnton, directed=FALSE)
read.graph(c:/SNAData/BelovAnton, directed=FALSE)
read.graph(c:/SNAData/BelovAnton, directed=FALSE)
read.graph(c:\\SNAData\\BelovAnton, directed=FALSE)
read.graph(C:\\SNAData\\BelovAnton, directed=FALSE)
read.graph(C:\\SNAData\\BelovAnton.txt, directed=FALSE)
read.graph(C:\\BelovAnton.txt, directed=FALSE)
read.graph(BelovAnton.txt, directed=FALSE)
getwd()
read.graph(BelovAnton.txt, directed=FALSE)
file <- BelovAnton.txt
file <- "BelovAnton.txt"
read.graph(file, directed=FALSE)
bsk<-read.table("http://www.dimiter.eu/Data_files/edgesdata3.txt", sep='\t', dec=',', header=T)
bsk.network<-graph.data.frame(bsk, directed=F)
V(bsk.network)
E(bsk.network)
degree(bsk.network)
plot(bsk.network)
plot(bsk.network)
plot(bsk.network)
fix(bsk)
bsk<-read.table("BelovAnton.txt", sep='\t', dec=',', header=T)
bsk<-read.table("AntonBelov.txt", sep='\t', dec=',', header=T)
bsk.network<-graph.data.frame(bsk, directed=F)
bsk
bsk.network<-graph.data.frame(bsk, directed=FALSE)
bsk<-read.table("AntonBelov.txt")
bsk<-read.table("AntonBelov.txt", sep=' ', dec=',', header=T)
bsk.network<-graph.data.frame(bsk, directed=FALSE)
plot(bsk)
Sys.setlocale(,"ru_RU")
Sys.setlocale("LC_ALL", "Ru_Ru")
Sys.setlocale(category="LC_CTYPE", locale="Russian")
test <- c("привет")
test
plot(bsk)
bsk<-read.table("AntonBelov.txt", sep=' ', dec=',', header=T)
bsk.network<-graph.data.frame(bsk, directed=FALSE)
plot(bsk)
utils:::menuInstallPkgs()
bsk
bsk<-read.table("AntonBelov.txt", sep=' ', dec=',', header=T)
bsk
plot(bsk)
bsk.network
bsk.network<-graph.data.frame(bsk, directed=F)
bsk.network
plot(bsk.network)
betweenness.centrality.clustering(bsk, treshhold=0.2, normalize=FALSE)
betweenness.centrality.clustering(bsk, 0.2, FALSE)
data.frame = graph.data.frame(bsk, FALSE)
betweenness.centrality.clustering(bsk, 0.2, FALSE)
file
data(file)
data(bsk.data)
G = graph.data.frame(bsk, FALSE)
betweenness.centrality.clustering(G, 0.2, FALSE)
betweenness.centrality.clustering(G)
rm(list=ls(all=TRUE))
fileData = read.table("AntonBelov.txt")
fileData = read.table("AntonBelov.txt", header=FALSE, sep=" ", fileEncoding="UTF-8")
fileData = read.table("AntonBelov.txt", header=FALSE, sep=" ", fileEncoding="UTF-8",  quote = "")
fileData = read.table("AntonBelov.txt", header=FALSE, sep=" ", fileEncoding="UTF-8",  quote = "", dec=".")
fileData = read.table("AntonBelov.txt", header=FALSEheader=FALSE,, sep=" ", fileEncoding="UTF-8",  quote = "", dec=".", )
fileData = read.table("AntonBelov.txt", sep=" ", dec='.', header=FALSE, fileEncoding="UTF-8")
fileData <- read.table("AntonBelov.txt", sep=" ", dec='.', header=FALSE, fileEncoding="UTF-8")
fileData <- read.table("AntonBelov.txt", sep=' ', dec='.', header=FALSE, fileEncoding="UTF-8")
fileData <- read.table("AntonBelov.txt", dec='.', header=FALSE, fileEncoding="UTF-8")
fileData <- read.table("AntonBelov.txt", dec='.')
fileData <- read.table("AntonBelov.txt", dec='.', header=FALSE)
rm(list=ls(all=TRUE))
bsk<-read.table("AntonBelov.txt", sep=' ', dec=',', header=F)
bsk
plot(bsk)
bsk<-read.table("AntonBelov.txt", sep=' ', dec=',', header=F, fileEncoding="UTF-8")
bsk<-read.table("AntonBelov.txt", sep=' ', dec=',', header=F, fileEncoding=UTF-8)
bsk<-read.table("AntonBelov.txt", sep=' ', dec=',', header=F, encoding="UTF-8")
bsk
G=graph.data.frame(bsk, directed=FALSE)
plot(G)
plot(G)
betweenness.centrality.clustering(G, treshhold=0.2, normalize=T)
betweenness.centrality.clustering(G, treshold=0.2, normalize=T)
betweenness.centrality.clustering(G, 0.2, TRUE)
betweenness.centrality.clustering(G, 0.5, TRUE)
file
a
a <- 3
a
betweenness.centrality.clustering(a, 0.5, TRUE)
library(GraphClusterAnalysis)
utils:::menuInstallPkgs()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
igraph::recode()
igraph:recode()
igraphdemo
igraphdemo()
G=graph.data.frame(bsk, directed=FALSE)
plot(G)
clusters(G, mode="weak")
ClustersRes <- clusters(G, mode="weak")
ClustersRes
plot(ClustersRes)
ClustersRes <- clusters(G, mode="strong")
ClustersRes
is.connected(G, mode="weak")
is.connected(G, mode="strong")
betweenness.estimate(G)
edge.betweenness.community(G, weights=null, directed=FALSE, edge.betweenness = TRUE, merges = TRUE,
edge.betweenness.community(G, weights=null, directed=FALS
edge.betweenness.community(G, weights=null, directed=FALSedge.betweenness = TRUE, merges = TRUE,
edge.betweenness.community(G, weights=null, directed=FALSE, edge.betweenness=TRUE, merges=TRUE, bridges=TRUE, modularity=TRUE, membership=TRUE)
edge.betweenness.community(G, weights=NULL, directed=FALSE, edge.betweenness=TRUE, merges=TRUE, bridges=TRUE, modularity=TRUE, membership=TRUE)
q()
getwd().
getwd()
quit()
x <- 1:4
x
y<-2
y
x + y
getwd()
x<-data.readcsv(hw1_data.csv)
x<-readcsv(hw1_data.csv)
x=read.csv(hw1_data.csv)
x=read.csv("hw1_data.csv")
x
names(x)
prinx(x, 2)
print(x, 2)
x[1:2]
x[1]
names(x)
x[1:2,]
dim(x)
x[,152:153]
x[152:153,]
x[47,]
bad<-x[Ozone == NA]
bad<-x[x.Ozone == NA]
bad<-x[x[Ozone] == NA]
bad<-x[x[[Ozone] == NA]
x[Ozone]
x[[Ozone]]
x$Ozone
bad<-x[x$Ozone == NA]
bad<-x$Ozone == NA
dim(bad)
bad
bad<-is.NA(x$Ozone)
bad<-is.na(x$Ozone)
bad
bad<-is.na(x$Ozone)==TRUE
bad
x$Ozone
bad<-c(is.na(x$Ozone)==TRUE)
bad
bc<- bad[TRUE]
bc
bad[TRUE]
bad(TRUE)
bad$TRUE
bc<-factor(bad, levels = c(TRUE, FALSE))
bc
bc[TRUE]
bc<-bad[bad==TRUE]
bc
length(bc)
oz<-x$Ozone
oz
oz<-oz[!is.na(oz)]
oz
mean(oz)
sub<-x[x$Ozone > 31 & x$Temp>90]
sub<-x[x$Ozone > 31 & x$Temp>90,]
sub
sub<-x[x$Ozone > 31 & x$Temp>90 & !is.na(x$Ozone) & !is.na(x$Temp),]
sub
mean(sub$Solar.R)
mean(sub[sub$Month == 6]$Temp)
mean(test<- sub[sub$Month == 6]$Temp)
sub<-x[x$Month==6 & !is.na(x$Month) & !is.na(x$Temp),]
sub
mean(sub$Temp)
sub<-x[x$Month==5 & !is.na(x$Month) & !is.na(x$Ozone),]
max(sub$Ozone)
wd()
getwd()
setwd("C:users/op/documents/RprogCourse")
setwd("C:users/op/Documents/RprogCourse")
setwd("~/RprogCourse")
d <- read.csv("specdata/40.csv")
d <- read.csv("specdata/040.csv")
d
d <- read.csv(paste(c("specdata", "040.csv"), sep = "/"))
s <- paste(c("specdata", "040.csv"), sep = "/")
s
s <- paste(c("specdata", "040.csv"), sep = '/')
s
s <- paste("specdata", "040.csv", sep = '/')
s
d$nitrate[!is.na(d$nitrate)]
pollutantmean <- function(directory, pollutant, id = 40) {
for(i in id){
data <- read.csv(paste(directory, "/", i, ".csv", sep = ""))
pol <- data$pollutant[!is.na(data$pollutant)]
}
}
pollutantmean("specdata", nitrate)
pollutantmean <- function(directory, pollutant, id = 40) {
for(i in id){
data <- read.csv(paste(directory, "/0", i, ".csv", sep = ""))
pol <- data$pollutant[!is.na(data$pollutant)]
}
}
pollutantmean("specdata", nitrate)
pol=nitrate
pol <- nitrate
pol <- "nitrate"
pol
d
d[pol]
d[[pol]
]
pollutantmean <- function(directory, pollutant, id = 40) {
for(i in id){
data <- read.csv(paste(directory, "/0", i, ".csv", sep = ""))
pol <- data[!is.na(data[pollutant])]
}
}
pollutantmean("specdata", nitrate)
pollutantmean("specdata", "nitrate")
"sd"
as.character("as")
sd
? list.files
list.files()
list.files("specdata")
read.csv("specdata/040.csv")
d <- read.csv("specdata/040.csv")
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
data$sulfate
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "sulfate", 1:10)
allFilesData[pollutant]
source("pollutantmean.R")
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "nitrate", 23)
source("complete.R")
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
? rbind
source("complete.R")
complete("specdata", 1)
r
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
?data.frame
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
r <- data.frame(id = integer(0), nobs = integer(0))
r
str(r)
files <- list.files("specdata", full.names = TRUE)
files[1]
d <- read.csv(files[1])
nrow(complete.cases(d))
ncol(complete.cases(d))
length(complete.cases(d))
sum(complete.cases(d))
source("complete.R")
complete("specdata", 1)
df <- data.frame(s = integer(), b = integer())
df
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
source("complete.R")
complete("specdata", 1)
complete("specdata", c(2, 4, 8, 10, 12))
complete("specdata", 30:25)
complete("specdata", 3)
cor?
c
?cor
source("corr.R")
corr("specdata", 150)
files <- list.files("specdata", full.names = TRUE)
files
files[1]
complete("specdata")
source("corr.R")
corr("specdata", 150)
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
d <- read.csv("specdata/001.csv")
d
source("corr.R")
corr("specdata", 150)
complete("specdata", 1)
complete("specdata", 2)
corr("specdata", 150)
d <- read.csv("specdata/002.csv")
d <- d[complete.cases(d)]
d <- d[complete.cases(d),]
d
length(d)
nrow(d)
source("corr.R")
complete("specdata", 1)
corr("specdata", 150)
source("corr.R")
corr("specdata", 150)
d
d[1]
d[1,]
d$sulfate
d[sulfate]
source("corr.R")
corr("specdata", 150)
q
Q
corr("specdata", 150)
}
source('~/RprogCourse/corr.R')
corr("specdata", 150)
c<-corr("specdata", 150)
summary(c)
c<-corr("specdata", 15000)
c
source('~/RprogCourse/corr.R')
corr("specdata", 150)
source('~/RprogCourse/corr.R')
corr("specdata", 150)
cr <- corr("specdata", 150)
summary(cr)
cr <- corr("specdata", 400)
summary(cr)
cr <- corr("specdata", 4000)
summary(cr)
cr
source('~/RprogCourse/corr.R')
cr <- corr("specdata", 4000)
cr
cr <- corr("specdata")
summary(cr)
length(cr)
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submi()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('~/RprogCourse/corr.R')
corr("specdata")
submit()
clear
install.packages("swirl")
library(swirl)
swirl()
